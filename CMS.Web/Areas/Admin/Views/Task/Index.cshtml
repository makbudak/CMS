@{
    ViewData["Title"] = "Görevler";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div ng-app="app" ng-controller="appController">
    <div class="card shadow mb-3">
        <div class="card-header bg-white pt-3">
            <div class="row">
                <div class="col-9">
                    <nav aria-label="breadcrumb" class="pt-2">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="/admin/dashboard" class="text-decoration-none text-dark">
                                    <i class="fa fa-home"></i>  Anasayfa
                                </a>
                            </li>
                            <li class="breadcrumb-item">
                                <a>
                                    Ayarlar
                                </a>
                            </li>
                            <li class="breadcrumb-item active" aria-current="page">
                                Görevler
                            </li>
                        </ol>
                    </nav>
                </div>
                <div class="col-3">
                    <div class="btn-group float-end">
                        <button type="button" class="btn bg-white dropdown-toggle btn-sm" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fa fa-cog"></i>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li>
                                <a ng-click="add()" class="dropdown-item text-dark cursor-pointer">Görev Ekle</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div ng-cloak dx-data-grid="dataGridOptions" dx-item-alias="data">
                <div data-options="dxTemplate:{ name:'cellTemplate' }">
                    <button class="btn btn-outline-secondary btn-sm me-1" ng-click="edit(data)">
                        <i class="fa fa-pencil"></i>
                    </button>
                    <button class="btn btn-outline-danger btn-sm" ng-click="delete(data)">
                        <i class="fa fa-trash"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="modalForm" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h6 class="modal-title">{{titlePopup}}</h6>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <div class="w-100" dx-select-box="{
                        label: 'Kategori Adı',
                        stylingMode: 'outlined',
                        labelMode: 'floating',
                        displayExpr: 'name',
                        valueExpr: 'id',
                        bindingOptions: {
                            dataSource: 'taskCategories',
                            value: 'selectedData.taskCategoryId',
                            onValueChanged: 'categoryOnValueChanged'
                        }
                    }"
                                     dx-validator="{
                         validationRules: [{
                            type: 'required',
                            message: 'Kategori seçiniz.'
                        }]
                    }"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <div class="w-100" dx-select-box="{
                                    label: 'Durumu',
                                    stylingMode: 'outlined',
                                    labelMode: 'floating',
                                    displayExpr: 'name',
                                    valueExpr: 'id',
                                    bindingOptions: {
                                        dataSource: 'taskStatuses',
                                        value: 'selectedData.taskStatusId',
                                    }
                                }"
                                     dx-validator="{
                                         validationRules: [{
                                            type: 'required',
                                            message: 'Durumu seçiniz.'
                                        }]
                                }"></div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="mb-3">
                                <div class="w-100" 
                                     dx-text-box="{
                                            label: 'Başlığı',
                                            stylingMode: 'outlined',
                                            labelMode: 'floating',
                                            bindingOptions: {
                                                value: 'selectedData.title'
                                            }
                                        }" 
                                     dx-validator="{
                                         validationRules: [{
                                            type: 'required',
                                            message: 'Başlık giriniz.'
                                        }]
                                }"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <div class="w-100" dx-select-box="{
                                label: 'Kullanıcı',
                                stylingMode: 'outlined',
                                labelMode: 'floating',
                                displayExpr: 'name',
                                valueExpr: 'id',
                                bindingOptions: {
                                    dataSource: 'users',
                                    value: 'selectedData.assignUserId',
                                }
                            }"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="w-100 pb-2">Aktif</label>
                                <div dx-switch="{
                            bindingOptions: {
                                value: 'selectedData.isActive'
                            }
                        }"></div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div dx-html-editor="htmlEditorOptions"></div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="text-end">
                        <button dx-button="{
                            text: 'Kaydet',
                            onClick: save,
                            type: 'default'
                        }" class="btn"></button>
                        <button data-bs-dismiss="modal" class="btn btn-outline-secondary">
                            KAPAT
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        appModule.controller('appController', ($scope, $http) => {
            $scope.titlePopup = "";
            $scope.selectedData = {};
            $scope.taskCategories = [];
            $scope.taskStatuses = [];
            $scope.users = [];
            $scope.dataGrid = {};

            function getTaskCategories() {
                $http.get("/admin/lookup/task-categories").then((res) => {
                    $scope.taskCategories = res.data;
                });
            }

            function getTaskStatuses(id) {
                $http.get(`/admin/lookup/task-statuses/${id}`).then((res) => {
                    $scope.taskStatuses = res.data;
                });
            }

            function getUsers() {
                $http.get(`/admin/lookup/users`).then((res) => {
                    $scope.users = res.data;
                });
            }

            $scope.categoryOnValueChanged = function (e) {
                getTaskStatuses(e.value);
            }

            $scope.dataGridOptions = {
                dataSource: DevExpress.data.AspNet.createStore({
                    key: 'id',
                    loadUrl: '/admin/task/list',
                }),
                remoteOperations: true,
                paging: {
                    pageSize: 5,
                },
                pager: {
                    visible: true,
                    allowedPageSizes: [10, 20, 50, 'all'],
                    showPageSizeSelector: true,
                    showInfo: true,
                    showNavigationButtons: true,
                },
                filterRow: {
                    visible: true,
                    applyFilter: 'auto',
                },
                headerFilter: {
                    visible: true,
                    search: {
                        enabled: true,
                    },
                },
                wordWrapEnabled: true,
                showBorders: true,
                showColumnLines: true,
                showRowLines: true,
                rowAlternationEnabled: true,
                allowColumnResizing: true,
                columns: [{
                    caption: "",
                    width: 105,
                    allowHeaderFiltering: false,
                    allowFiltering: false,
                    cellTemplate: 'cellTemplate'
                },
                {
                    dataField: 'id',
                    sortOrder: "desc",
                    visible: false
                },
                {
                    caption: 'Kategori Adı',
                    dataField: 'taskCategoryName',
                    width: 150,
                },
                {
                    caption: 'Durumu',
                    dataField: 'taskStatusName',
                },
                {
                    caption: 'Başlığı',
                    dataField: 'title',
                },
                {
                    caption: 'Atanan Kullanıcı',
                    dataField: 'userNameSurname',
                    width: 200,
                },
                {
                    caption: 'Aktif',
                    dataField: 'isActive',
                    width: 100,
                },
                {
                    caption: 'Kayıt Tarihi',
                    dataField: 'insertedDate',
                    dataType: 'date',
                    format: 'yyyy-MM-dd HH:mm',
                    width: 150,
                },
                {
                    caption: 'Güncelleme Tarihi',
                    dataField: 'updatedDate',
                    dataType: 'date',
                    format: 'yyyy-MM-dd HH:mm',
                    width: 150,
                }],
                onInitialized(e) {
                    $scope.dataGrid = e.component;
                }
            };

            $scope.htmlEditorOptions = {
                bindingOptions: {
                    'toolbar.multiline': true,
                    value: "selectedData.description"
                },
                toolbar: {
                    items: [
                        'undo', 'redo', 'separator',
                        {
                            name: 'size',
                            acceptedValues: ['8pt', '10pt', '12pt', '14pt', '18pt', '24pt', '36pt'],
                            options: { inputAttr: { 'aria-label': 'Font size' } },
                        },
                        {
                            name: 'font',
                            acceptedValues: ['Arial', 'Courier New', 'Georgia', 'Impact', 'Lucida Console', 'Tahoma', 'Times New Roman', 'Verdana'],
                            options: { inputAttr: { 'aria-label': 'Font family' } },
                        },
                        'separator', 'bold', 'italic', 'strike', 'underline', 'separator',
                        'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'separator',
                        'orderedList', 'bulletList', 'separator',
                        {
                            name: 'header',
                            acceptedValues: [false, 1, 2, 3, 4, 5],
                            options: { inputAttr: { 'aria-label': 'Header' } },
                        }, 'separator',
                        'color', 'background', 'separator',
                        'link', 'image', 'separator',
                        'clear', 'codeBlock', 'blockquote', 'separator',
                        'insertTable', 'deleteTable',
                        'insertRowAbove', 'insertRowBelow', 'deleteRow',
                        'insertColumnLeft', 'insertColumnRight', 'deleteColumn',
                    ],
                },
                mediaResizing: {
                    enabled: true,
                },
                imageUpload: {
                    fileUploadMode: 'base64',
                    tabs: ['file', 'url']
                },

            }

            $scope.add = function () {
                $scope.titlePopup = "Görev Ekle";
                $("#modalForm").modal('show');
                $scope.selectedData = {};
                $scope.selectedData.isActive = true;
                getTaskCategories();
                getUsers();
            }

            $scope.edit = function (row) {
                $scope.titlePopup = "Görev Düzenle";
                $("#modalForm").modal('show');
                getUsers();
                getTaskCategories();
                getTaskStatuses(row.data.taskCategoryId)
                $http.get(`/admin/task/${row.data.id}`).then((res) => {
                    $scope.selectedData = res.data;
                });
            }

            $scope.save = function (e) {
                const result = e.validationGroup.validate();
                if (result.isValid) {                   
                    if ($scope.selectedData.id) {
                        $http.put(`/admin/task`, $scope.selectedData).then((res) => {
                            $scope.dataGrid.refresh();
                            $("#modalForm").modal('hide');
                            DevExpress.ui.notify(res.data.message, 'success');
                        });
                    } else {
                        $http.post(`/admin/task`, $scope.selectedData).then((res) => {
                            $scope.dataGrid.refresh();
                            $("#modalForm").modal('hide');
                            DevExpress.ui.notify(res.data.message, 'success');
                        });
                    }
                }
            }

            $scope.delete = function (row) {
                if (confirm("Silmek istediğinize emin misiniz?")) {
                    $http.delete(`/admin/task/${row.data.id}`).then((res) => {
                        $scope.dataGrid.refresh();
                        DevExpress.ui.notify(res.data.message, 'success');
                    });
                }
            }

        });
    </script>
    }

