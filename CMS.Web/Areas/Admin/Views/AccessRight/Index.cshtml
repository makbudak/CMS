@{
    ViewData["Title"] = "Erişim Hakları";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div ng-app="app" ng-controller="appController">
    <div class="card shadow mb-3">
        <div class="card-header bg-white pt-3">
            <div class="row">
                <div class="col-9">
                    <nav aria-label="breadcrumb" class="pt-2">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="/admin/dashboard" class="text-decoration-none text-dark">
                                    <i class="fa fa-home"></i>  Anasayfa
                                </a>
                            </li>
                            <li class="breadcrumb-item">
                                <a>
                                    Tanımlar
                                </a>
                            </li>
                            <li class="breadcrumb-item active" aria-current="page">
                                Erişim Hakları
                            </li>
                        </ol>
                    </nav>
                </div>
                <div class="col-3">
                    <div class="btn-group float-end">
                        <button type="button" class="btn bg-white dropdown-toggle btn-sm"
                                data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fa fa-cog"></i>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li>
                                <a ng-click="addAccessRight()"
                                   class="dropdown-item text-dark cursor-pointer">
                                    Erişim Hakkı Ekle
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div ng-cloak dx-tree-view="accessRightOptions" dx-item-alias="row">
                <div data-options="dxTemplate:{ name:'itemTemplate' }">
                    <button class="btn btn-outline-info btn-sm me-1" ng-click="showEndpoints(row)">
                        <i class="fa-solid fa-arrow-up-right-from-square"></i>
                    </button>
                    <button class="btn btn-outline-secondary btn-sm me-1" ng-click="editAccessRight(row)">
                        <i class="fa fa-pencil"></i>
                    </button>
                    <button class="btn btn-outline-danger btn-sm" ng-click="deleteAccessRight(row)">
                        <i class="fa fa-trash"></i>
                    </button>
                    <span class="ms-2">{{row.name}}</span>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="modalForm" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h6 class="modal-title">{{titlePopup}}</h6>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row mb-3">
                        <div class="col-md-12">
                            <div class="mb-4">
                                <div dx-drop-down-box="dropdownAccessRightOptions ">
                                    <div data-options="dxTemplate: { name: 'content' }">
                                        <div dx-tree-view="dropdownAccessRightOptions.treeView">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-4">
                                <div class="w-100"
                                     dx-text-box="{
                                        label: 'Adı',
                                        stylingMode: 'outlined',
                                        labelMode: 'floating',
                                        bindingOptions: {
                                            value: 'selectedData.name'
                                        }
                                     }"
                                     dx-validator="{
                                        validationGroup: 'accessRightValidateGroup',
                                        validationRules: [{
                                            type: 'required',
                                            message: 'Başlık giriniz.'
                                        }]
                                     }">
                                </div>
                            </div>
                            <div class="mb-4">
                                <div class="w-100"
                                     dx-number-box="{
                                        label: 'Sırası',
                                        stylingMode: 'outlined',
                                        labelMode: 'floating',
                                        min: 1,
                                        bindingOptions: {
                                            value: 'selectedData.displayOrder'
                                        }
                                     }"
                                     dx-validator="{
                                        validationGroup: 'accessRightValidateGroup',
                                        validationRules: [{
                                            type: 'required',
                                            message: 'Sırası giriniz.'
                                        }]
                                     }">
                                </div>
                            </div>
                            <div>
                                <label class="w-100 pb-2">Aktif</label>
                                <div dx-switch="{
                                 bindingOptions: {
                                    value: 'selectedData.isActive'
                                 }
                            }">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="text-end">
                        <button dx-button="{
                            text: 'Kaydet',
                            type: 'default',
                            onClick: saveAccessRight,
                            validationGroup: 'accessRightValidateGroup'
                        }" class="btn"></button>
                        <button data-bs-dismiss="modal" class="btn btn-outline-secondary">
                            KAPAT
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="modalEndpoint" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h6 class="modal-title">{{selectedAccessRight.name}} - Uç Noktalar</h6>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div ng-if="showForm">
                        <h6> {{titleModalEndpoint}}</h6>
                        <div class="row mt-3">
                            <div class="col-md-6">
                                <div class="mb-4">
                                    <div class="w-100"
                                         dx-text-box="{
                                            label: 'Uç Nokta',
                                            stylingMode: 'outlined',
                                            labelMode: 'floating',
                                            bindingOptions: {
                                                value: 'accessRightEndpoint.endpoint'
                                            }
                                         }"
                                         dx-validator="{
                                            validationGroup: 'endpointValidateGroup',
                                            validationRules: [{
                                                type: 'required',
                                                message: 'Uç Nokta Adı giriniz.'
                                            }]
                                         }">
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-4">
                                    <div class="w-100"
                                         dx-select-box="{
                                            label: 'Metot Adı',
                                            stylingMode: 'outlined',
                                            labelMode: 'floating',
                                            displayExpr: 'name',
                                            valueExpr: 'id',
                                            bindingOptions: {
                                                dataSource: 'methodTypes',
                                                value: 'accessRightEndpoint.method'
                                            }
                                         }"
                                         dx-validator="{
                                            validationGroup: 'endpointValidateGroup',
                                            validationRules: [{
                                                type: 'required',
                                                message: 'Metot seçiniz.'
                                            }]
                                     }">
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-4">
                                    <div class="w-100"
                                         dx-number-box="{
                                            label: 'Seviye',
                                            stylingMode: 'outlined',
                                            labelMode: 'floating',
                                            bindingOptions: {
                                                value: 'accessRightEndpoint.routeLevel'
                                            }
                                         }"
                                         dx-validator="{
                                            validationGroup: 'endpointValidateGroup',
                                            validationRules: [{
                                                type: 'required',
                                                message: 'Seviye giriniz.'
                                            }]
                                     }">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="text-end">
                            <button dx-button="{
                                    text: 'Vazgeç',
                                    onClick: cancelEndpoint,
                                    type: 'normal'
                                }" class="btn"></button>
                            <button dx-button="{
                                    text: 'Kaydet',
                                    onClick: saveEndpoint,
                                    type: 'default',
                                    validationGroup: 'endpointValidateGroup'
                                }" class="btn"></button>
                        </div>
                    </div>
                    <div class="table-responsive" ng-if="!showForm">
                        <div class="text-end mb-3">
                            <a class="btn btn-primary text-white btn-sm" ng-click="addEndpoint()">
                                <i class="fa fa-plus"></i> Ekle
                            </a>
                        </div>
                        <table class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Uç Nokta</th>
                                    <th>Metot</th>
                                    <th>Seviyesi</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="item in endpoints" ng-if="endpoints.length>0">
                                    <td>
                                        <button class="btn btn-outline-secondary btn-sm me-1"
                                                ng-click="editAccessRightEndpoint(item)">
                                            <i class="fa fa-pencil"></i>
                                        </button>
                                        <button class="btn btn-outline-danger btn-sm"
                                                ng-click="deleteAccessRightEndpoint(item)">
                                            <i class="fa fa-trash"></i>
                                        </button>
                                    </td>
                                    <td>{{item.endpoint}}</td>
                                    <td>{{item.methodName}}</td>
                                    <td>{{item.routeLevel}}</td>
                                </tr>
                                <tr ng-if="endpoints.length==0">
                                    <td colspan="4">
                                        Kayıt bulunamadı.
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                </div>
                <div class="modal-footer">
                    <div class="text-end">
                        <button data-bs-dismiss="modal" class="btn btn-outline-secondary">
                            KAPAT
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        appModule.controller('appController', ($scope, $http) => {
            let treeView;
            $scope.titlePopup = "";
            $scope.selectedData = {};
            $scope.dataSource = [];
            $scope.isGridBoxOpened = false;
            $scope.endpoints = [];
            $scope.showForm = false;
            $scope.selectedAccessRight = {};
            $scope.accessRightEndpoint = {};
            $scope.methodTypes = [];

            getAccessRights();

            const syncTreeViewSelection = function (e) {
                if (!e) {
                    return;
                }
                if (!$scope.selectedData.parentId) {
                    e.unselectAll();
                } else {
                    e.selectItem($scope.selectedData.parentId);
                }
            };

            function getAccessRights() {
                $http.get("/admin/access-right/list").then((res) => {
                    $scope.dataSource = res.data;
                });
            }

            $scope.accessRightOptions = {
                bindingOptions: {
                    dataSource: 'dataSource',
                    searchMode: 'contains'
                },
                itemsExpr: 'items',
                searchEnabled: true,
                searchEditorOptions: {
                    placeholder: "Ara",
                    stylingMode: 'outlined'
                },
                keyExpr: 'id',
                displayExpr: 'name',
                itemTemplate: 'itemTemplate',
                dataStructure: 'plain',
                parentIdExpr: 'parentId',
            };

            $scope.dropdownAccessRightOptions = {
                bindingOptions: {
                    value: 'selectedData.parentId',
                    opened: 'isGridBoxOpened',
                    dataSource: 'dataSource'
                },
                valueExpr: 'id',
                displayExpr: 'name',
                placeholder: 'Bağlı erişim belirteci seçiniz.',
                showClearButton: true,
                label: 'Bağlı Erişim Belirteci',
                stylingMode: 'outlined',
                labelMode: 'floating',
                onValueChanged() {
                    syncTreeViewSelection(treeView);
                },
                treeView: {
                    bindingOptions: {
                        dataSource: 'dataSource',
                    },
                    keyExpr: 'id',
                    displayExpr: 'name',
                    dataStructure: 'plain',
                    parentIdExpr: 'parentId',
                    selectByClick: true,
                    selectNodesRecursive: false,
                    selectionMode: 'single',
                    onContentReady(e) {
                        treeView = e.component;
                        syncTreeViewSelection(treeView);
                    },
                    onItemSelectionChanged(args) {
                        $scope.selectedData.parentId = args.component.getSelectedNodeKeys();
                    },
                    onItemClick() {
                        $scope.isGridBoxOpened = false;
                    }
                }
            };

            $scope.addAccessRight = function () {
                $scope.titlePopup = "Erişim Belirteci Ekle";
                $("#modalForm").modal("show");
                $scope.selectedData = {};
                $scope.selectedData.isActive = true;
                $scope.selectedData.menuType = 1;
            }

            $scope.editAccessRight = function (e) {
                $scope.titlePopup = "Erişim Belirteci Düzenle";
                $("#modalForm").modal("show");

                $http.get(`/admin/access-right/${e.id}`).then((res) => {
                    $scope.selectedData = res.data;
                });
            }

            $scope.deleteAccessRight = function (row) {
                if (confirm("Silmek istediğinize emin misiniz?")) {
                    $http.delete(`/admin/access-right/${row.id}`).then((res) => {
                        getAccessRights();
                        DevExpress.ui.notify(res.data.message, 'success');
                    });
                }
            }

            $scope.saveAccessRight = function (e) {
                const result = e.validationGroup.validate();
                if (result.isValid) {
                    if ($scope.selectedData.id) {
                        $http.put(`/admin/access-right`, $scope.selectedData).then((res) => {
                            getAccessRights();
                            $("#modalForm").modal('hide');
                            DevExpress.ui.notify(res.data.message, 'success');
                        });
                    } else {
                        $http.post(`/admin/access-right`, $scope.selectedData).then((res) => {
                            getAccessRights();
                            $("#modalForm").modal('hide');
                            DevExpress.ui.notify(res.data.message, 'success');
                        });
                    }
                }
            }

            function getMethodTypes() {
                $http.get("/admin/lookup/method-types").then((res) => {
                    $scope.methodTypes = res.data;
                })
            }

            function getAccessRightEndpoints() {
                $http.get(`/admin/accessrightendpoint/getbyaccessrightid/${$scope.selectedAccessRight.id}`)
                    .then((res) => {
                        $scope.endpoints = res.data;
                    });
            }

            $scope.showEndpoints = function (e) {
                $("#modalEndpoint").modal("show");
                $scope.selectedAccessRight = e;
                getAccessRightEndpoints();
            }

            $scope.addEndpoint = function () {
                $scope.showForm = true;
                $scope.titleModalEndpoint = "Yeni Uç Nokta Ekle";
                $scope.accessRightEndpoint = {};
                $scope.accessRightEndpoint.id = 0;
                $scope.accessRightEndpoint.accessRightId = $scope.selectedAccessRight.id;
                getMethodTypes();
            }

            $scope.editAccessRightEndpoint = function (e) {
                $scope.showForm = true;
                $scope.titleModalEndpoint = "Uç Nokta Düzenle";
                getMethodTypes();

                $http.get(`/admin/accessrightendpoint/getbyid/${e.id}`).then((res) => {
                    $scope.accessRightEndpoint = res.data;
                });
            }

            $scope.deleteAccessRightEndpoint = function (e) {
                if (confirm("Silmek istediğinize emin misiniz?")) {
                    $http.delete(`/admin/accessrightendpoint/${e.id}`).then((res) => {
                        getAccessRightEndpoints();
                        DevExpress.ui.notify(res.data.message, 'success');
                    });
                }
            }


            $scope.saveEndpoint = function (e) {
                const result = e.validationGroup.validate();
                if (result.isValid) {
                    if ($scope.accessRightEndpoint.id > 0) {
                        $http.put(`/admin/accessrightendpoint`, $scope.accessRightEndpoint)
                            .then((res) => {
                                getAccessRightEndpoints();
                                $scope.showForm = false;
                                DevExpress.ui.notify(res.data.message, 'success');
                            });
                    } else {
                        $http.post(`/admin/accessrightendpoint`, $scope.accessRightEndpoint)
                            .then((res) => {
                                getAccessRightEndpoints();
                                $scope.showForm = false;
                                DevExpress.ui.notify(res.data.message, 'success');
                            });
                    }
                }
            }

            $scope.cancelEndpoint = function () {
                $scope.showForm = false;
            }
        });
    </script>
}
