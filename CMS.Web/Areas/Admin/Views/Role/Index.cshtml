@{
    ViewData["Title"] = "Roller";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div ng-app="app" ng-controller="appController">
    <div class="card shadow mb-4">
        <div class="card-header bg-white pt-3">
            <div class="row">
                <div class="col-9">
                    <nav aria-label="breadcrumb" class="pt-2">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="/admin/dashboard" class="text-decoration-none text-dark">
                                    <i class="fa fa-home"></i>  Anasayfa
                                </a>
                            </li>
                            <li class="breadcrumb-item">
                                <a>
                                    Ayarlar
                                </a>
                            </li>
                            <li class="breadcrumb-item active" aria-current="page">
                                Roller
                            </li>
                        </ol>
                    </nav>
                </div>
                <div class="col-3">
                    <div class="btn-group float-end">
                        <button type="button" class="btn bg-white dropdown-toggle btn-sm" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fa fa-cog"></i>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li>
                                <a ng-click="add()" class="dropdown-item text-dark cursor-pointer">
                                    Rol Ekle
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div ng-cloak dx-data-grid="dataGridOptions" dx-item-alias="data">
                <div data-options="dxTemplate:{ name:'cellTemplate' }">
                    <button class="btn btn-outline-secondary btn-sm me-1" ng-click="edit(data)">
                        <i class="fa fa-pencil"></i>
                    </button>
                    <button class="btn btn-outline-danger btn-sm" ng-click="delete(data)">
                        <i class="fa fa-trash"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="modalForm" data-bs-backdrop="static" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h6 class="modal-title">{{titlePopup}}</h6>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="form">
                        <div class="mb-3">
                            <div class="mb-3">
                                <div class="w-100"
                                     dx-text-box="{
                                            label: 'Adı',
                                            stylingMode: 'outlined',
                                            labelMode: 'floating',
                                            bindingOptions: {
                                                value: 'selectedData.name'
                                            }
                                        }"
                                     dx-validator="{
                                         validationRules: [{
                                            type: 'required',
                                            message: 'Adı giriniz.'
                                        }]
                                    }">
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="w-100 pb-2">Aktif</label>
                            <div dx-switch="{
                                 bindingOptions: {
                                    value: 'selectedData.isActive'
                                 }
                            }">
                            </div>
                        </div>
                        <div class="mb-4">
                            <div class="form-label">Erişim Hakları</div>
                            <div class="border border-secondary p-3" style="border-radius: 4px;">
                                <div ng-cloak dx-tree-view="accessRightOptions" dx-item-alias="row">
                                    <div data-options="dxTemplate:{ name:'itemTemplate' }">
                                        <span class="ms-2">{{row.name}}</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <div class="text-end">
                        <button dx-button="{
                            text: 'Kaydet',
                            onClick: save,
                            type: 'default'
                        }" class="btn"></button>
                        <button data-bs-dismiss="modal" class="btn btn-outline-secondary">
                            Kapat
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        appModule.controller('appController', ($scope, $http) => {
            $scope.dataGrid = {};
            $scope.selectedData = {};
            $scope.accessRightDataSource = [];
            $scope.treeAccessRight = {};

            function getAccessRight() {
                return $http.get("/admin/access-right/list").then((res) => {
                    $scope.accessRightDataSource = res.data;
                });
            }

            $scope.dataGridOptions = {
                dataSource: DevExpress.data.AspNet.createStore({
                    key: 'id',
                    loadUrl: '/admin/role/list',
                }),
                remoteOperations: true,
                paging: {
                    pageSize: 5,
                },
                pager: {
                    visible: true,
                    allowedPageSizes: [10, 20, 50, 'all'],
                    showPageSizeSelector: true,
                    showInfo: true,
                    showNavigationButtons: true,
                },
                filterRow: {
                    visible: true,
                    applyFilter: 'auto',
                },
                headerFilter: {
                    visible: true,
                    search: {
                        enabled: true,
                    },
                },
                wordWrapEnabled: true,
                showBorders: true,
                showColumnLines: true,
                showRowLines: true,
                rowAlternationEnabled: true,
                allowColumnResizing: true,
                columns: [{
                    caption: "",
                    width: 105,
                    allowHeaderFiltering: false,
                    allowFiltering: false,
                    cellTemplate: 'cellTemplate'
                },
                {
                    dataField: 'id',
                    sortOrder: "desc",
                    visible: false
                },
                {
                    caption: 'Adı',
                    dataField: 'name'
                },
                {
                    caption: 'Aktif',
                    dataField: 'isActive',
                    width: 200
                }],
                onInitialized(e) {
                    $scope.dataGrid = e.component;
                }
            };

            $scope.accessRightOptions = {
                bindingOptions: {
                    dataSource: 'accessRightDataSource'
                },
                searchEditorOptions: {
                    placeholder: "Ara",
                    stylingMode: 'outlined'
                },
                searchMode: 'contains',
                itemsExpr: 'items',
                keyExpr: 'id',
                displayExpr: 'name',
                itemTemplate: 'itemTemplate',
                searchEnabled: true,
                dataStructure: 'plain',
                parentIdExpr: 'parentId',
                selectionMode: 'multiple',
                showCheckBoxesMode: 'normal',
                selectNodesRecursive: true,
                selectByClick: true,
                onInitialized(e) {
                    $scope.treeAccessRight = e.component;
                }
            };

            $scope.add = function () {
                $scope.titlePopup = "Rol Ekle";
                $("#modalForm").modal("show");
                $scope.selectedData = {};
                $scope.selectedData.isActive = true;
                getAccessRight();
            }

            $scope.edit = function (row) {
                $scope.titlePopup = "Rol Düzenle";
                $("#modalForm").modal("show");

                $http.get("/admin/access-right/list").then((accessRightResult) => {
                    $scope.accessRightDataSource = accessRightResult.data;

                    $http.get(`/admin/role/${row.data.id}`).then((roleResult) => {
                        $scope.selectedData = roleResult.data;
                        let accessRights = [];
                        $scope.accessRightDataSource.map((accessRight) => {
                            var selectItem = roleResult.data.accessRightIds.find(x => x == accessRight.id);
                            if (selectItem) {
                                accessRights.push({
                                    ...accessRight,
                                    selected: true
                                });
                            } else {
                                accessRights.push(accessRight);
                            }
                        });
                        $scope.accessRightDataSource = accessRights;
                    });
                });
            }

            $scope.delete = function (row) {
                if (confirm("Silmek istediğinize emin misiniz?")) {
                    $http.delete(`/admin/role/${row.data.id}`).then((res) => {
                        $scope.dataGrid.refresh();
                        DevExpress.ui.notify(res.data.message, 'success');
                    });
                }
            }

            $scope.save = function (e) {
                const selectIds = $scope.treeAccessRight.getSelectedNodes()
                    .map((node) => node.itemData.id);

                const result = e.validationGroup.validate();
                if (result.isValid) {
                    $scope.selectedData.accessRightIds = selectIds;
                    if ($scope.selectedData.id) {
                        $http.put(`/admin/role`, $scope.selectedData).then((res) => {
                            $scope.dataGrid.refresh();
                            $("#modalForm").modal('hide');
                            DevExpress.ui.notify(res.data.message, 'success');
                        });
                    } else {
                        $http.post(`/admin/role`, $scope.selectedData).then((res) => {
                            $scope.dataGrid.refresh();
                            $("#modalForm").modal('hide');
                            DevExpress.ui.notify(res.data.message, 'success');
                        });
                    }
                }
            }
        });
    </script>
}


